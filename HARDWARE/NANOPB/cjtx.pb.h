/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Thu Sep 15 09:42:54 2016. */

#ifndef PB_CJTX_PB_H_INCLUDED
#define PB_CJTX_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _extinfo {
    bool has_set_interval;
    uint32_t set_interval;
    bool has_upload_info;
    bool upload_info;
    bool has_need_upgrade;
    bool need_upgrade;
/* @@protoc_insertion_point(struct:extinfo) */
} extinfo;

typedef struct _state_request {
    bool has_id;
    char id[20];
    bool has_longitude;
    int32_t longitude;
    bool has_latitude;
    int32_t latitude;
    bool has_pressure1;
    int32_t pressure1;
    bool has_pressure2;
    int32_t pressure2;
    bool has_pressure3;
    int32_t pressure3;
    bool has_temperature1;
    int32_t temperature1;
    bool has_temperature2;
    int32_t temperature2;
    bool has_temperature3;
    int32_t temperature3;
    bool has_speed;
    int32_t speed;
    bool has_timestamp;
    uint32_t timestamp;
    bool has_engine_speed;
    int32_t engine_speed;
    bool has_mileage;
    uint32_t mileage;
/* @@protoc_insertion_point(struct:state_request) */
} state_request;

typedef struct _state_response {
    bool has_errcode;
    uint32_t errcode;
    bool has_extinfo;
    extinfo extinfo;
/* @@protoc_insertion_point(struct:state_response) */
} state_response;

/* Default values for struct fields */

/* Initializer values for message structs */
#define state_request_init_default               {false, "", false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define extinfo_init_default                     {false, 0, false, 0, false, 0}
#define state_response_init_default              {false, 0, false, extinfo_init_default}
#define state_request_init_zero                  {false, "", false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0, false, 0}
#define extinfo_init_zero                        {false, 0, false, 0, false, 0}
#define state_response_init_zero                 {false, 0, false, extinfo_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define extinfo_set_interval_tag                 1
#define extinfo_upload_info_tag                  2
#define extinfo_need_upgrade_tag                 3
#define state_request_id_tag                     1
#define state_request_longitude_tag              2
#define state_request_latitude_tag               3
#define state_request_pressure1_tag              4
#define state_request_pressure2_tag              5
#define state_request_pressure3_tag              6
#define state_request_temperature1_tag           7
#define state_request_temperature2_tag           8
#define state_request_temperature3_tag           9
#define state_request_speed_tag                  10
#define state_request_timestamp_tag              11
#define state_request_engine_speed_tag           12
#define state_request_mileage_tag                13
#define state_response_errcode_tag               1
#define state_response_extinfo_tag               2

/* Struct field encoding specification for nanopb */
extern const pb_field_t state_request_fields[14];
extern const pb_field_t extinfo_fields[4];
extern const pb_field_t state_response_fields[3];

/* Maximum encoded size of messages (where known) */
#define state_request_size                       144
#define extinfo_size                             10
#define state_response_size                      18

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CJTX_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
